{"version":3,"sources":["LoginStore.js"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA,IAAI,IAAI,QAAQ,QAAR,CAAR;;AAEA,IAAM,aAAa,iBAAO,WAAP,CAAmB;AACpC,eAAa,KADuB;;AAGpC,YAAU,EAH0B;;AAKpC,mBAAiB,EALmB;;AAOpC,sBAAoB,EAPgB;;AASpC,oCAToC;;AAWpC,QAXoC,oBAW5B;AAAA;;AACN,MAAE,IAAF,CAAO;AACL,WAAK,6BADA;AAEL,cAAQ,MAFH;AAGL,eAAS,iBAAC,IAAD,EAAS;AAChB,cAAK,WAAL,GAAmB,IAAnB;AACA,cAAK,QAAL,GAAgB,KAAK,QAArB;AACA,cAAK,OAAL,CAAa;AACX,uBAAa,MAAK,WADP;AAEX,oBAAU,MAAK;AAFJ,SAAb;AAID,OAVI;AAWL,aAAO,iBAAK;AACV,cAAK,OAAL,CAAa,EAAb;AACD;AAbI,KAAP;AAeD,GA3BmC;AA6BpC,SA7BoC,mBA6B3B,QA7B2B,EA6BjB,QA7BiB,EA6BR;AAAA;;AAC1B,MAAE,IAAF,CAAO;AACL,WAAK,6BADA;AAEL,cAAQ,MAFH;AAGL,YAAM,EAAC,UAAU,QAAX,EAAqB,UAAU,QAA/B,EAHD;AAIL,eAAS,iBAAC,IAAD,EAAS;AAChB,eAAK,WAAL,GAAmB,IAAnB;AACA,eAAK,QAAL,GAAgB,KAAK,QAArB;AACA,eAAK,OAAL,CAAa;AACX,uBAAa,OAAK,WADP;AAEX,oBAAU,OAAK;AAFJ,SAAb;AAIA,oCAAe,IAAf,CAAoB,GAApB;AACD,OAZI;AAaL,aAAO,iBAAK;AACV,eAAK,WAAL,GAAmB,KAAnB;AACA,eAAK,OAAL,CAAa,EAAb;AACD;AAhBI,KAAP;AAkBD,GAhDmC;AAkDpC,YAlDoC,sBAkDzB,QAlDyB,EAkDf,QAlDe,EAkDN;AAAA;;AAC5B,MAAE,IAAF,CAAO;AACL,WAAK,gCADA;AAEL,cAAQ,MAFH;AAGL,YAAM;AACJ,kBAAU,QADN;AAEJ,kBAAU;AAFN,OAHD;AAOL,eAAS,mBAAK;AACZ,oCAAe,IAAf,CAAoB,GAApB;AACD,OATI;AAUL,aAAO,eAAC,IAAD,EAAS;AACd,YAAI,aAAa,KAAK,YAAtB;AACA,YAAI,cAAc,UAAlB,EAA8B;AAC5B,iBAAK,OAAL,CAAa,EAAC,QAAQ,OAAT,EAAb;AACD,SAFD,MAEO,IAAI,cAAc,OAAlB,EAA2B;AAChC,iBAAK,OAAL,CAAa,EAAC,QAAQ,QAAT,EAAb;AACD;AACF;AAjBI,KAAP;AAmBD,GAtEmC;AAwEpC,UAxEoC,sBAwEzB;AAAA;;AACT,MAAE,IAAF,CAAO;AACL,WAAK,8BADA;AAEL,cAAQ,KAFH;AAGL,eAAS,mBAAK;AACZ,eAAK,OAAL,CAAa,EAAb;AACD,OALI;AAML,cAAQ,kBAAK;AACX,cAAM,gBAAN;AACD;AARI,KAAP;AAUD,GAnFmC;AAqFpC,iBArFoC,6BAqFlB;AACf,SAAK,OAAL,CAAa,EAAC,QAAO,EAAR,EAAb;AACF;AAvFmC,CAAnB,CAAnB;;kBA2Fe,U","file":"LoginStore-compiled.js","sourcesContent":["import reflux from 'reflux';\nimport actions from '../actions/LoginAction';\nimport {browserHistory} from 'react-router';\n\nlet $ = require('jquery');\n\nconst LoginStore = reflux.createStore({\n  login_state: false,\n\n  username: '',\n\n  login_error_msg: '',\n\n  register_error_msg: '',\n\n  listenables: actions,\n\n  onInit(){\n    $.ajax({\n      url: 'http://localhost:3000/login',\n      method: 'POST',\n      success: (data)=> {\n        this.login_state = true;\n        this.username = data.username;\n        this.trigger({\n          login_state: this.login_state,\n          username: this.username\n        });\n      },\n      error: ()=> {\n        this.trigger('');\n      }\n    });\n  },\n\n  onLogin (username, password){\n    $.ajax({\n      url: 'http://localhost:3000/login',\n      method: 'POST',\n      data: {username: username, password: password},\n      success: (data)=> {\n        this.login_state = true;\n        this.username = data.username;\n        this.trigger({\n          login_state: this.login_state,\n          username: this.username\n        });\n        browserHistory.push('/')\n      },\n      error: ()=> {\n        this.login_state = false;\n        this.trigger('');\n      }\n    });\n  },\n\n  onRegister(username, password){\n    $.ajax({\n      url: 'http://localhost:3000/register',\n      method: 'POST',\n      data: {\n        username: username,\n        password: password\n      },\n      success: ()=> {\n        browserHistory.push('/')\n      },\n      error: (data)=> {\n        var errMessage = data.responseText;\n        if (errMessage == 'wrongful') {\n          this.trigger({errMsg: '输入不合法'})\n        } else if (errMessage == 'exist') {\n          this.trigger({errMsg: '用户名已存在'})\n        }\n      }\n    });\n  },\n\n  onLogout (){\n    $.ajax({\n      url: 'http://localhost:3000/logout',\n      method: 'GET',\n      success: ()=> {\n        this.trigger('');\n      },\n      failed: ()=> {\n        alert('logout failed!');\n      }\n    });\n  },\n\n  onRegistererror (){\n     this.trigger({errMsg:''});\n  }\n\n});\n\nexport default LoginStore;\n"]}