{"version":3,"sources":["LoginStore.js"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA,IAAI,IAAI,QAAQ,QAAR,CAAR;;AAEA,IAAM,aAAa,iBAAO,WAAP,CAAmB;AACpC,eAAa,KADuB;;AAGpC,YAAU,EAH0B;;AAKpC,oCALoC;;AAOpC,QAPoC,oBAO5B;AAAA;;AACN,MAAE,IAAF,CAAO;AACL,WAAK,6BADA;AAEL,cAAQ,MAFH;AAGL,eAAS,iBAAC,IAAD,EAAS;AAChB,cAAK,WAAL,GAAmB,IAAnB;AACA,cAAK,QAAL,GAAgB,KAAK,QAArB;AACA,cAAK,OAAL,CAAa;AACX,uBAAa,MAAK,WADP;AAEX,oBAAU,MAAK;AAFJ,SAAb;AAID,OAVI;AAWL,aAAO,iBAAK;AACV,cAAK,OAAL,CAAa,EAAb;AACD;AAbI,KAAP;AAeD,GAvBmC;AAyBpC,SAzBoC,mBAyB3B,QAzB2B,EAyBjB,QAzBiB,EAyBR;AAAA;;AAC1B,MAAE,IAAF,CAAO;AACL,WAAK,6BADA;AAEL,cAAQ,MAFH;AAGL,YAAM,EAAC,UAAU,QAAX,EAAqB,UAAU,QAA/B,EAHD;AAIL,eAAS,iBAAC,IAAD,EAAS;AAChB,eAAK,WAAL,GAAmB,IAAnB;AACA,eAAK,QAAL,GAAgB,KAAK,QAArB;AACA,eAAK,OAAL,CAAa;AACX,uBAAa,OAAK,WADP;AAEX,oBAAU,OAAK;AAFJ,SAAb;AAIA,oCAAe,IAAf,CAAoB,GAApB;AACD,OAZI;AAaL,aAAO,iBAAK;AACV,eAAK,WAAL,GAAmB,KAAnB;AACA,eAAK,OAAL,CAAa,EAAb;AACD;AAhBI,KAAP;AAkBD,GA5CmC;AA8CpC,YA9CoC,sBA8CzB,QA9CyB,EA8ChB,QA9CgB,EA8CP,CAE5B,CAhDmC;AAkDpC,UAlDoC,sBAkDzB;AAAA;;AACT,MAAE,IAAF,CAAO;AACL,WAAK,8BADA;AAEL,cAAQ,KAFH;AAGL,eAAS,mBAAK;AACZ,eAAK,OAAL,CAAa,EAAb;AACD,OALI;AAML,cAAQ,kBAAK;AACX,cAAM,gBAAN;AACD;AARI,KAAP;AAUD;AA7DmC,CAAnB,CAAnB;;kBAiEe,U","file":"LoginStore-compiled.js","sourcesContent":["import reflux from 'reflux';\nimport actions from '../actions/LoginAction';\nimport {browserHistory} from 'react-router';\n\nlet $ = require('jquery');\n\nconst LoginStore = reflux.createStore({\n  login_state: false,\n\n  username: '',\n\n  listenables: actions,\n\n  onInit(){\n    $.ajax({\n      url: 'http://localhost:3000/login',\n      method: 'POST',\n      success: (data)=> {\n        this.login_state = true;\n        this.username = data.username;\n        this.trigger({\n          login_state: this.login_state,\n          username: this.username\n        });\n      },\n      error: ()=> {\n        this.trigger('');\n      }\n    });\n  },\n\n  onLogin (username, password){\n    $.ajax({\n      url: 'http://localhost:3000/login',\n      method: 'POST',\n      data: {username: username, password: password},\n      success: (data)=> {\n        this.login_state = true;\n        this.username = data.username;\n        this.trigger({\n          login_state: this.login_state,\n          username: this.username\n        });\n        browserHistory.push('/')\n      },\n      error: ()=> {\n        this.login_state = false;\n        this.trigger('');\n      }\n    });\n  },\n\n  onRegister(username,password){\n\n  },\n\n  onLogout (){\n    $.ajax({\n      url: 'http://localhost:3000/logout',\n      method: 'GET',\n      success: ()=> {\n        this.trigger('');\n      },\n      failed: ()=> {\n        alert('logout failed!');\n      }\n    });\n  }\n\n});\n\nexport default LoginStore;\n"]}