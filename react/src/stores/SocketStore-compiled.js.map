{"version":3,"sources":["SocketStore.js"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAGA,IAAM,QAAQ,iBAAO,WAAP,CAAmB;AAC/B,SAAO,EADwB;;AAG/B,SAAO,EAHwB;;AAK/B,qCAL+B;;AAO/B,UAP+B,sBAOrB;AAAA;;AAER,SAAK,MAAL,GAAc,sBAAG,uBAAH,CAAd;AACA,SAAK,MAAL,CAAY,EAAZ,CAAe,kBAAf,EAAmC,UAAC,IAAD,EAAS;AAC1C,YAAK,SAAL,CAAe,IAAf;AACD,KAFD;AAGA,SAAK,MAAL,CAAY,EAAZ,CAAe,gBAAf,EAAiC,UAAC,IAAD,EAAS;AACxC,YAAK,KAAL,GAAa,EAAb;AACA,WAAK,GAAL,CAAS,UAAC,KAAD,EAAU;AACjB,cAAK,KAAL,CAAW,IAAX,CAAgB,MAAM,QAAtB;AACD,OAFD;AAGA,YAAK,OAAL,CAAa,EAAC,OAAO,MAAK,KAAb,EAAb;AACD,KAND;AAOA,SAAK,MAAL,CAAY,EAAZ,CAAe,gBAAf,EAAiC,UAAC,IAAD,EAAS;AACxC,UAAI,QAAQ,qBAAY,QAApB,IAAgC,qBAAY,QAAZ,IAAwB,EAA5D,EAAgE;AAC9D,cAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB;AACA,cAAK,OAAL,CAAa,EAAC,OAAO,MAAK,KAAb,EAAb;AACD;AACF,KALD;AAMA,SAAK,MAAL,CAAY,EAAZ,CAAe,kBAAf,EAAmC,UAAC,IAAD,EAAS;AAC1C,cAAQ,GAAR,CAAY,OAAO,KAAnB;AACD,KAFD;AAGD,GA7B8B;AA+B/B,OA/B+B,mBA+BxB;AACL,SAAK,OAAL,CAAa,EAAC,OAAO,KAAK,KAAb,EAAb;AACD,GAjC8B;AAmC/B,QAnC+B,kBAmCvB,IAnCuB,EAmClB;AACX,SAAK,MAAL,CAAY,IAAZ,CAAiB,aAAjB,EAAgC,IAAhC;AACD,GArC8B;AAuC/B,WAvC+B,qBAuCpB,IAvCoB,EAuCf;AACd,QAAI,KAAK,QAAL,IAAiB,qBAAY,QAAjC,EAA2C;AACzC,WAAK,KAAL,GAAa,OAAb;AACD,KAFD,MAGK;AACH,WAAK,KAAL,GAAa,MAAb;AACD;AACD,SAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB;AACA,SAAK,OAAL,CAAa,EAAC,OAAO,KAAK,KAAb,EAAb;AACD,GAhD8B;AAkD/B,OAlD+B,iBAkDzB,IAlDyB,EAkDpB;AACT,SAAK,MAAL,CAAY,IAAZ,CAAiB,gBAAjB,EAAmC,IAAnC;AACD,GApD8B;AAsD/B,OAtD+B,mBAsDxB;AACL,SAAK,MAAL,CAAY,IAAZ,CAAiB,gBAAjB;AACD;AAxD8B,CAAnB,CAAd;;kBA4De,K","file":"SocketStore-compiled.js","sourcesContent":["import reflux from 'reflux';\nimport actions from '../actions/SocketAction';\nimport io from 'socket.io-client';\nimport login_store from '../stores/LoginStore';\n\n\nconst Store = reflux.createStore({\n  items: [],\n\n  users: [],\n\n  listenables: actions,\n\n  onSocket(){\n\n    this.socket = io('http://localhost:3000');\n    this.socket.on('server:broadcast', (data)=> {\n      this.onReceive(data);\n    });\n    this.socket.on('server:allUser', (data)=> {\n      this.users = [];\n      data.map((index)=> {\n        this.users.push(index.username);\n      });\n      this.trigger({users: this.users});\n    });\n    this.socket.on('server:newUser', (data)=> {\n      if (data != login_store.username && login_store.username != '') {\n        this.users.push(data);\n        this.trigger({users: this.users});\n      }\n    });\n    this.socket.on('server:userLeave', (data)=> {\n      console.log(data + ' 离开');\n    });\n  },\n\n  onGet(){\n    this.trigger({items: this.items});\n  },\n\n  onSend (data){\n    this.socket.emit('client:send', data);\n  },\n\n  onReceive (data){\n    if (data.username == login_store.username) {\n      data.align = 'right';\n    }\n    else {\n      data.align = 'left';\n    }\n    this.items.push(data);\n    this.trigger({items: this.items});\n  },\n\n  onNew(data){\n    this.socket.emit('client:newUser', data);\n  },\n\n  onAll(){\n    this.socket.emit('client:allUser');\n  }\n\n});\n\nexport default Store;\n"]}